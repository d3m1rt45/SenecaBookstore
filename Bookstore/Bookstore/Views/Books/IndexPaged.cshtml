@using PagedList.Mvc;

@model PagedList.IPagedList<Bookstore.ViewModels.BooksIndexViewModel>

@{
    ViewBag.Title = "All Titles";
}

<!--PageHead-->
<div class="row pt-4">
    <!--LeftColumn-->
    <div class="col-4 text-left">
        <!--Header-->
        <h2 class="font-weight-bold mb-0 pb-0">All Titles</h2>
        <!--/Header-->

        <!--Map-->
        <p class="map font-italic my-0 py-0">
            @Html.ActionLink("Home", "Index", "Home", null, null) /
            Books
        </p>
        <!--/Map-->
    </div>
    <!--/LeftColumn-->

    <!--RightColumn-->
    <div class="col-8 text-right">
        <!--SearchBar-->
        <div class="d-inline-block">
            @using (Html.BeginForm())
            {
                <div class="input-group">
                    @Html.TextBox("search", null, new { @class = "form-control text-dark mt-2", placeholder = "Search..." })
                    <div class="input-group-prepend">
                        <button class="btn btn-dark rounded hvr-grow-shadow mt-2" type="submit"><i class="fa fa-search"></i></button>
                    </div>
                </div>
            }
        </div>
        <!--/SearchBar-->

        <!--SortBy-->
        <select class="btn btn-outline-dark bg-white text-dark p-2 mb-1" id="UrlList" onchange="SortBy()">
            <option value="@Url.Action("Index", "Books", null)">Sort by...</option>
            <option value="@Url.Action("Index", "Books", new { sortBy = "AtoZ" })">Title (a-z)</option>
            <option value="@Url.Action("Index", "Books", new { sortBy = "ZtoA" })">Title (z-a)</option>
            <option value="@Url.Action("Index", "Books", new { sortBy = "lowToHigh" })">Price ↓</option>
            <option value="@Url.Action("Index", "Books", new { sortBy = "highToLow" })">Price ↑</option>
        </select>
        <script>
            function SortBy() {
                window.location.href = document.getElementById("UrlList").value;
            }
        </script>
        <!--/SortBy-->
    </div>
    <!--/RightColumn-->
</div>
<!--/PageHead-->

<hr />

<!--BookList-->
<div class="row">
    @foreach (var item in Model)
    {
        <div class="col-6 col-md-4 col-lg-3 col-xl-2 my-3 d-flex align-items-stretch">
            <div class="card w-100 bg-light hvr-grow-rotate">
                <a class="stretched-link card-link text-dark" href="/Books/ByISBN?isbn=@item.ISBN">
                    <img class="card-img-top w-100" src="~/Images/@item.ImagePath" alt="Book cover" />
                    <div class="card-body d-flex flex-column text-center">
                        <p class="card-title font-weight-bold py-0 my-0">@item.Title</p>
                        <p class="card-text py-0 my-0">@item.AuthorName</p>
                        <p class="card-text font-weight-bold py-0 my-0">£@item.Price</p>
                    </div>
                </a>
            </div>
        </div>
    }
</div>
<!--/BookList-->


<!--PageControls-->
<div class="text-center mt-2">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>
<!--PageControls-->