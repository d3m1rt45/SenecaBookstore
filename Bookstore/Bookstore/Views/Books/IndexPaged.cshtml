@using PagedList.Mvc;

@model PagedList.IPagedList<Bookstore.ViewModels.BooksIndexViewModel>

@{
    ViewBag.Title = "All Titles";
}

    <section class="Books-IndexPaged">

        <div class="PageHead row pt-4">
            <div class="Left col-4 text-left">
                <h2 class="Header text-light font-weight-bold mb-0 pb-0">All Titles</h2><!--.Header/-->
                <p class="Map text-light font-italic my-0 py-0">
                    @Html.ActionLink("Home", "Index", "Home", null, null) /
                    Books
                </p><!--/.Map-->
            </div><!--/.Left-->
            <div class="Right col-8 text-right">
                <div class="SearchBar d-inline-block mr-1">
                    @using (Html.BeginForm())
                    {
                        <div class="input-group">
                            @Html.TextBox("search", null, new { @class = "form-control text-dark mt-2", placeholder = "Search..." })
                            <div class="input-group-prepend">
                                <button class="btn btn-light rounded-right mt-2" type="submit"><i class="fa fa-search"></i></button>
                            </div>
                        </div>
                    }
                </div><!--/.SearchBar-->  
                <select class="SortBy btn btn-outline-dark bg-white text-dark p-2 mb-1" id="UrlList" onchange="SortBy()">
                    <option value="@Url.Action("Index", "Books", null)">Sort by...</option>
                    <option value="@Url.Action("Index", "Books", new { sortBy = "AtoZ" })">Title (a-z)</option>
                    <option value="@Url.Action("Index", "Books", new { sortBy = "ZtoA" })">Title (z-a)</option>
                    <option value="@Url.Action("Index", "Books", new { sortBy = "lowToHigh" })">Price ↓</option>
                    <option value="@Url.Action("Index", "Books", new { sortBy = "highToLow" })">Price ↑</option>
                </select><!--/.SortBy-->
            </div><!--/.RightColumn-->
        </div><!--/PageHead-->

        <hr /><!--Head/Body-Divider-->

        <article class="PageBody row">
            @foreach (var card in Model)
            {
                <div class="CardContainer col-6 col-md-4 col-lg-3 col-xl-2 mb-4 d-flex align-items-stretch">
                    <div class="Card card w-100 bg-dark hvr-shrink">
                        <a class="CardLink stretched-link card-link text-light" href="/Books/ByISBN?isbn=@card.ISBN">
                            <img class="CardImage card-img-top w-100" src="~/Images/@card.ImagePath" alt="Book cover" /><!--.CardImage/-->
                            <div class="CardBody card-body d-flex flex-column text-center">
                                <p class="Title card-title font-weight-bold p-0 m-0">@card.Title</p><!--.Title/-->
                                <p class="Author card-text p-0 m-0">@card.AuthorName</p><!--.Author/-->
                                <p class="Price card-text font-weight-bold p-0 m-0">£@card.Price</p><!--.Price.-->
                            </div><!--/.CardBody-->
                        </a><!--/.CardLink-->
                    </div><!--/.Card-->
                </div><!--/.CardContainer-->
            }
        </article><!--/.PageBody-->

        <article class="PageControls text-center mt-5 font-weight-bold h5">
            <span class="text-light h6 pb-0 mb-0">Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</span>
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        </article><!--/.PageControls-->

    </section><!--/.Books-IndexPaged-->