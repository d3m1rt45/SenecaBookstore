@model Bookstore.ViewModels.ByAuthorViewModel

@{
    var authorName = Model.Author;
    ViewBag.Title = authorName;
}

<div class="row pt-4"><!--PageHead-->
    <div class="col-6 text-left"><!--LeftColumn-->
        
        <h2 class="d-block align-self-start font-weight-bold mb-0 pb-0"><!--Header-->
            @authorName
        </h2><!--/Header-->

        <p class="map font-italic my-0 py-0"><!--Map-->
            @Html.ActionLink("Home", "Index", "Home", null, null) /
            @Html.ActionLink("Authors", "Index", "Authors", null, null) /
            @authorName
        </p><!--/Map-->

    </div><!--/LeftColumn-->
    <div class="col-6 text-right"><!--RightColumn-->
        
        <div class="d-inline-block pt-2"><!--SearchBar-->
            @using (Html.BeginForm())
            {
                <div class="input-group">
                    @Html.TextBox("search", null, new { @class = "form-control text-dark", placeholder = "Search..." })
                    <div class="input-group-prepend">
                        <button class="btn btn-dark rounded hvr-grow-shadow" type="submit"><i class="fa fa-search"></i></button>
                    </div>
                </div>
            }
        </div><!--/SearchBar-->

        <select class="btn btn-outline-dark bg-white text-dark p-2 mb-1" id="UrlList" onchange="SortBy()"><!--SortBy-->
            <option value="@Url.Action("ByAuthor", "Books", new { role = authorName })">Sort by...</option>
            <option value="@Url.Action("ByAuthor", "Books", new { role = authorName, order = "AtoZ" })">Title (a-z)</option>
            <option value="@Url.Action("ByAuthor", "Books", new { role = authorName, order = "ZtoA" })">Title (z-a)</option>
        </select>
        <script>
            function SortBy() {
                window.location.href = document.getElementById("UrlList").value;
            }
        </script><!--/SortBy-->

    </div><!--/RightColumn-->
</div><!--/PageHead-->

<hr />

<div class="row"><!--Row-->
    @foreach (var item in Model.BookCards)//Print BooksIndexViewModel objects as Bootstrap Cards
    {
        <div class="col-6 col-md-4 col-lg-3 col-xl-2 my-3 d-flex align-items-stretch"><!--Column-->

            <div class="card w-100 bg-light hvr-grow-rotate"><!--Card-->
                <a class="stretched-link card-link text-dark" href="/Books/ByISBN?isbn=@item.ISBN"><!--Link-->
                    <img class="card-img-top w-100" src="~/Images/@item.ImagePath" alt="Book cover" /><!--Image/-->
                    <div class="card-body d-flex flex-column text-center"><!--CardBody-->
                        <p class="card-title font-weight-bold py-0 my-0"><!--CardTitle:BookTitle-->
                            @item.Title
                        </p><!--/CardTitle:BookTitle-->
                        <p class="card-text py-0 my-0"><!--CardText:BookAuthor-->
                            @item.AuthorName
                        </p><!--/CardText:BookAuthor-->
                        <p class="card-text font-weight-bold py-0 my-0"><!--CardText:BookPrice-->
                            £@item.Price
                        </p><!--CardText:BookPrice-->
                    </div><!--/CardBody-->
                </a><!--/Link-->
            </div><!--/Card-->

        </div><!--/Column-->
    }
</div><!--/Row-->